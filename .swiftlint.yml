excluded:
    - Carthage
    - Pods

disabled_rules:
    - large_tuple
    - opening_brace

opt_in_rules:
    - anyobject_protocol
    - array_init
    - closure_end_indentation
    - closure_spacing
    - collection_alignment
    - conditional_returns_on_newline
    - contains_over_first_not_nil
    - convenience_type
    - discouraged_object_literal
    - empty_count
    - empty_string
    - explicit_init
    - fallthrough
    - fatal_error_message
    - first_where
    - force_unwrapping
    - function_default_parameter_at_end
    - identical_operands
    - implicitly_unwrapped_optional
    - last_where
    - legacy_random
    - let_var_whitespace
    - literal_expression_end_indentation
    - lower_acl_than_parent
    - modifier_order
    - multiline_function_chains
    - multiline_literal_brackets
    - multiline_parameters
    - nimble_operator
    - no_extension_access_modifier
    - overridden_super_call
    - override_in_extension
    - pattern_matching_keywords
    - private_action
    - private_outlet
    - prohibited_interface_builder
    - prohibited_super_call
    - redundant_nil_coalescing
    - redundant_type_annotation
    - required_enum_case
    - single_test_class
    - sorted_first_last
    - static_operator
    - strong_iboutlet
    - strict_fileprivate
    - toggle_bool
    - trailing_closure
    - unavailable_function
    - unneeded_parentheses_in_closure_argument
    - untyped_error_in_catch
    - vertical_parameter_alignment_on_call
    - vertical_whitespace_closing_braces
    - vertical_whitespace_opening_braces
    - yoda_condition

analyzer_rules:
    - unused_declaration

identifier_name:
    min_length: 1

nesting:
    type_level: 2

line_length:
    ignores_comments: true

trailing_comma:
    mandatory_comma: true

trailing_closure:
    only_single_muted_parameter: true

cyclomatic_complexity:
    ignores_case_statements: true

custom_rules:
    prohibited_cyrillic:
        match_kinds:
            - argument
            - identifier
            - parameter
            - typeidentifier
        regex: '[а-яА-ЯёЁ]'
